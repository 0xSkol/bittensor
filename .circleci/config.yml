version: 2.1

orbs:
  python: circleci/python@1.5.0

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8
    resource_class: medium
    parallelism: 2

    steps:
      - checkout

      # TODO: Add Python version (matrix strategy)
      - restore_cache:
          keys:
            - v1-pypi-py3.8-{{ checksum "requirements.txt" }}

      - run:
          name: Install & Activate venv
          command: |
            python -m venv env/
            . env/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - "env/"
          key: v1-pypi-py3.8-{{ checksum "requirements.txt" }}

      - run:
          name: Install bittensor
          command: |
            . env/bin/activate
            pip install -e .

      - run:
          name: Instantiate wallet & protos
          command: |
            . env/bin/activate
            ./scripts/create_wallet.sh && ./scripts/build_protos.sh

      - run:
          name: Unit Tests
          command: |
            . env/bin/activate
            set -e
            TEST_FILES=$(circleci tests glob "tests/unit_tests/**/test_*.py" | circleci tests split --split-by=timings --timings-type=filename)
            mkdir -p test-results
            cp tests/pytest.ini . # workaround to fix pathing issues with pytest.
            pytest -c pytest.ini --durations=0 --verbose --junitxml=test-results/junit.xml $TEST_FILES

      - run:
          name: Integration Tests
          command: |
            . env/bin/activate
            set -e
            TEST_FILES=$(circleci tests glob "tests/integration_tests/**/test_*.py" | circleci tests split --split-by=timings --timings-type=filename)
            mkdir -p test-results
            cp tests/pytest.ini . # workaround to fix pathing issues with pytest.
            pytest -c pytest.ini --durations=0 --verbose --junitxml=test-results/junit.xml $TEST_FILES

      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

workflows:
  pre-pr:
    jobs:
      - build-and-test
